name: Solar System Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'
    
jobs:
    unit-testing:
        name: Unit Testing
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version
          uses: actions/setup-node@v3
          with:
            node-version: 20
    
        - name: Install Dependencies
          run: npm install
    
        - name: Unit Testing
          run: npm test
          
        - name: Archive Test Result
          uses: actions/upload-artifact@v3
          with:
            name: Mocha-Test-Result
            path: test-results.xml
    docker:
      runs-on: ubuntu-latest
      permissions:
        contents: read
        packages: write
      steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/solar-system:latest
    
    dev-deploy:
        name: DEV Deployment
        runs-on: ubuntu-latest
        environment: 
          name: development
        needs: docker
        steps:
        - name: Checkout code
          uses: actions/checkout@v2
        - name: Set up kubectl
          uses: azure/setup-kubectl@v1
          with:
            version: 'v1.26.0'
        - name: Set up Azure Kubernetes Service context
          uses: azure/k8s-set-context@v4
          with:
            method: kubeconfig
            kubeconfig: ${{ secrets.KUBECONFIG }}
        - name: Check Kubernetes Version
          run: |
            kubectl version --short -o yaml
        - name: Grep Ingress Controller IP
          run: |
            echo "INGRESS_IP=${kubectl -n ingress-nginx get services ingress-nginx-controller -o jsonpath="{.status.loadBalancer.ingress[0].ip}"}" >> $GITHUB_ENV
        - name:
          uses: cschleiden/replace-tokens@v1
          with:
            files: '["kubernetes/development/*.yaml"]'
          env:
            NAMESPACE: ${{ secrets.NAMESPACE }}
            REPLICAS: ${{ vars.REPLICAS }}
            IMAGE: "ghcr.io/{github.repository_owner}/solar-system:latest"
            INGRESS_IP: ${{ env.INGRESS_IP }}